//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace AspDotNetStorefrontCore.net.taxcloud.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TaxCloudSoap", Namespace="http://taxcloud.net")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseBase))]
    public partial class TaxCloud : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VerifyAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback LookupForDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorizedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorizedWithCaptureOperationCompleted;
        
        private System.Threading.SendOrPostCallback CapturedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTICGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTICsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTICsByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddExemptCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExemptCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExemptCertificatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TaxCloud() {
            this.Url = global::AspDotNetStorefrontCore.Properties.Settings.Default.AspDotNetStorefrontCore_net_taxcloud_api_TaxCloud;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VerifyAddressCompletedEventHandler VerifyAddressCompleted;
        
        /// <remarks/>
        public event LookupForDateCompletedEventHandler LookupForDateCompleted;
        
        /// <remarks/>
        public event LookupCompletedEventHandler LookupCompleted;
        
        /// <remarks/>
        public event AuthorizedCompletedEventHandler AuthorizedCompleted;
        
        /// <remarks/>
        public event AuthorizedWithCaptureCompletedEventHandler AuthorizedWithCaptureCompleted;
        
        /// <remarks/>
        public event CapturedCompletedEventHandler CapturedCompleted;
        
        /// <remarks/>
        public event ReturnedCompletedEventHandler ReturnedCompleted;
        
        /// <remarks/>
        public event GetTICGroupsCompletedEventHandler GetTICGroupsCompleted;
        
        /// <remarks/>
        public event GetTICsCompletedEventHandler GetTICsCompleted;
        
        /// <remarks/>
        public event GetTICsByGroupCompletedEventHandler GetTICsByGroupCompleted;
        
        /// <remarks/>
        public event AddExemptCertificateCompletedEventHandler AddExemptCertificateCompleted;
        
        /// <remarks/>
        public event DeleteExemptCertificateCompletedEventHandler DeleteExemptCertificateCompleted;
        
        /// <remarks/>
        public event GetExemptCertificatesCompletedEventHandler GetExemptCertificatesCompleted;
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/VerifyAddress", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VerifiedAddress VerifyAddress(string uspsUserID, string address1, string address2, string city, string state, string zip5, string zip4) {
            object[] results = this.Invoke("VerifyAddress", new object[] {
                        uspsUserID,
                        address1,
                        address2,
                        city,
                        state,
                        zip5,
                        zip4});
            return ((VerifiedAddress)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAddressAsync(string uspsUserID, string address1, string address2, string city, string state, string zip5, string zip4) {
            this.VerifyAddressAsync(uspsUserID, address1, address2, city, state, zip5, zip4, null);
        }
        
        /// <remarks/>
        public void VerifyAddressAsync(string uspsUserID, string address1, string address2, string city, string state, string zip5, string zip4, object userState) {
            if ((this.VerifyAddressOperationCompleted == null)) {
                this.VerifyAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAddressOperationCompleted);
            }
            this.InvokeAsync("VerifyAddress", new object[] {
                        uspsUserID,
                        address1,
                        address2,
                        city,
                        state,
                        zip5,
                        zip4}, this.VerifyAddressOperationCompleted, userState);
        }
        
        private void OnVerifyAddressOperationCompleted(object arg) {
            if ((this.VerifyAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAddressCompleted(this, new VerifyAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/LookupForDate", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LookupRsp LookupForDate(string apiLoginID, string apiKey, string customerID, string cartID, CartItem[] cartItems, Address origin, Address destination, bool deliveredBySeller, ExemptionCertificate exemptCert, System.DateTime useDate) {
            object[] results = this.Invoke("LookupForDate", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        cartID,
                        cartItems,
                        origin,
                        destination,
                        deliveredBySeller,
                        exemptCert,
                        useDate});
            return ((LookupRsp)(results[0]));
        }
        
        /// <remarks/>
        public void LookupForDateAsync(string apiLoginID, string apiKey, string customerID, string cartID, CartItem[] cartItems, Address origin, Address destination, bool deliveredBySeller, ExemptionCertificate exemptCert, System.DateTime useDate) {
            this.LookupForDateAsync(apiLoginID, apiKey, customerID, cartID, cartItems, origin, destination, deliveredBySeller, exemptCert, useDate, null);
        }
        
        /// <remarks/>
        public void LookupForDateAsync(string apiLoginID, string apiKey, string customerID, string cartID, CartItem[] cartItems, Address origin, Address destination, bool deliveredBySeller, ExemptionCertificate exemptCert, System.DateTime useDate, object userState) {
            if ((this.LookupForDateOperationCompleted == null)) {
                this.LookupForDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLookupForDateOperationCompleted);
            }
            this.InvokeAsync("LookupForDate", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        cartID,
                        cartItems,
                        origin,
                        destination,
                        deliveredBySeller,
                        exemptCert,
                        useDate}, this.LookupForDateOperationCompleted, userState);
        }
        
        private void OnLookupForDateOperationCompleted(object arg) {
            if ((this.LookupForDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LookupForDateCompleted(this, new LookupForDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/Lookup", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LookupRsp Lookup(string apiLoginID, string apiKey, string customerID, string cartID, CartItem[] cartItems, Address origin, Address destination, bool deliveredBySeller, ExemptionCertificate exemptCert) {
            object[] results = this.Invoke("Lookup", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        cartID,
                        cartItems,
                        origin,
                        destination,
                        deliveredBySeller,
                        exemptCert});
            return ((LookupRsp)(results[0]));
        }
        
        /// <remarks/>
        public void LookupAsync(string apiLoginID, string apiKey, string customerID, string cartID, CartItem[] cartItems, Address origin, Address destination, bool deliveredBySeller, ExemptionCertificate exemptCert) {
            this.LookupAsync(apiLoginID, apiKey, customerID, cartID, cartItems, origin, destination, deliveredBySeller, exemptCert, null);
        }
        
        /// <remarks/>
        public void LookupAsync(string apiLoginID, string apiKey, string customerID, string cartID, CartItem[] cartItems, Address origin, Address destination, bool deliveredBySeller, ExemptionCertificate exemptCert, object userState) {
            if ((this.LookupOperationCompleted == null)) {
                this.LookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLookupOperationCompleted);
            }
            this.InvokeAsync("Lookup", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        cartID,
                        cartItems,
                        origin,
                        destination,
                        deliveredBySeller,
                        exemptCert}, this.LookupOperationCompleted, userState);
        }
        
        private void OnLookupOperationCompleted(object arg) {
            if ((this.LookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LookupCompleted(this, new LookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/Authorized", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthorizedRsp Authorized(string apiLoginID, string apiKey, string customerID, string cartID, string orderID, System.DateTime dateAuthorized) {
            object[] results = this.Invoke("Authorized", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        cartID,
                        orderID,
                        dateAuthorized});
            return ((AuthorizedRsp)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorizedAsync(string apiLoginID, string apiKey, string customerID, string cartID, string orderID, System.DateTime dateAuthorized) {
            this.AuthorizedAsync(apiLoginID, apiKey, customerID, cartID, orderID, dateAuthorized, null);
        }
        
        /// <remarks/>
        public void AuthorizedAsync(string apiLoginID, string apiKey, string customerID, string cartID, string orderID, System.DateTime dateAuthorized, object userState) {
            if ((this.AuthorizedOperationCompleted == null)) {
                this.AuthorizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorizedOperationCompleted);
            }
            this.InvokeAsync("Authorized", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        cartID,
                        orderID,
                        dateAuthorized}, this.AuthorizedOperationCompleted, userState);
        }
        
        private void OnAuthorizedOperationCompleted(object arg) {
            if ((this.AuthorizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorizedCompleted(this, new AuthorizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/AuthorizedWithCapture", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthorizedRsp AuthorizedWithCapture(string apiLoginID, string apiKey, string customerID, string cartID, string orderID, System.DateTime dateAuthorized, System.DateTime dateCaptured) {
            object[] results = this.Invoke("AuthorizedWithCapture", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        cartID,
                        orderID,
                        dateAuthorized,
                        dateCaptured});
            return ((AuthorizedRsp)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorizedWithCaptureAsync(string apiLoginID, string apiKey, string customerID, string cartID, string orderID, System.DateTime dateAuthorized, System.DateTime dateCaptured) {
            this.AuthorizedWithCaptureAsync(apiLoginID, apiKey, customerID, cartID, orderID, dateAuthorized, dateCaptured, null);
        }
        
        /// <remarks/>
        public void AuthorizedWithCaptureAsync(string apiLoginID, string apiKey, string customerID, string cartID, string orderID, System.DateTime dateAuthorized, System.DateTime dateCaptured, object userState) {
            if ((this.AuthorizedWithCaptureOperationCompleted == null)) {
                this.AuthorizedWithCaptureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorizedWithCaptureOperationCompleted);
            }
            this.InvokeAsync("AuthorizedWithCapture", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        cartID,
                        orderID,
                        dateAuthorized,
                        dateCaptured}, this.AuthorizedWithCaptureOperationCompleted, userState);
        }
        
        private void OnAuthorizedWithCaptureOperationCompleted(object arg) {
            if ((this.AuthorizedWithCaptureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorizedWithCaptureCompleted(this, new AuthorizedWithCaptureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/Captured", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CapturedRsp Captured(string apiLoginID, string apiKey, string orderID) {
            object[] results = this.Invoke("Captured", new object[] {
                        apiLoginID,
                        apiKey,
                        orderID});
            return ((CapturedRsp)(results[0]));
        }
        
        /// <remarks/>
        public void CapturedAsync(string apiLoginID, string apiKey, string orderID) {
            this.CapturedAsync(apiLoginID, apiKey, orderID, null);
        }
        
        /// <remarks/>
        public void CapturedAsync(string apiLoginID, string apiKey, string orderID, object userState) {
            if ((this.CapturedOperationCompleted == null)) {
                this.CapturedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCapturedOperationCompleted);
            }
            this.InvokeAsync("Captured", new object[] {
                        apiLoginID,
                        apiKey,
                        orderID}, this.CapturedOperationCompleted, userState);
        }
        
        private void OnCapturedOperationCompleted(object arg) {
            if ((this.CapturedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CapturedCompleted(this, new CapturedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/Returned", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReturnedRsp Returned(string apiLoginID, string apiKey, string orderID, CartItem[] cartItems, System.DateTime returnedDate) {
            object[] results = this.Invoke("Returned", new object[] {
                        apiLoginID,
                        apiKey,
                        orderID,
                        cartItems,
                        returnedDate});
            return ((ReturnedRsp)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnedAsync(string apiLoginID, string apiKey, string orderID, CartItem[] cartItems, System.DateTime returnedDate) {
            this.ReturnedAsync(apiLoginID, apiKey, orderID, cartItems, returnedDate, null);
        }
        
        /// <remarks/>
        public void ReturnedAsync(string apiLoginID, string apiKey, string orderID, CartItem[] cartItems, System.DateTime returnedDate, object userState) {
            if ((this.ReturnedOperationCompleted == null)) {
                this.ReturnedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnedOperationCompleted);
            }
            this.InvokeAsync("Returned", new object[] {
                        apiLoginID,
                        apiKey,
                        orderID,
                        cartItems,
                        returnedDate}, this.ReturnedOperationCompleted, userState);
        }
        
        private void OnReturnedOperationCompleted(object arg) {
            if ((this.ReturnedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnedCompleted(this, new ReturnedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/GetTICGroups", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetTICGroupsRsp GetTICGroups(string apiLoginID, string apiKey) {
            object[] results = this.Invoke("GetTICGroups", new object[] {
                        apiLoginID,
                        apiKey});
            return ((GetTICGroupsRsp)(results[0]));
        }
        
        /// <remarks/>
        public void GetTICGroupsAsync(string apiLoginID, string apiKey) {
            this.GetTICGroupsAsync(apiLoginID, apiKey, null);
        }
        
        /// <remarks/>
        public void GetTICGroupsAsync(string apiLoginID, string apiKey, object userState) {
            if ((this.GetTICGroupsOperationCompleted == null)) {
                this.GetTICGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTICGroupsOperationCompleted);
            }
            this.InvokeAsync("GetTICGroups", new object[] {
                        apiLoginID,
                        apiKey}, this.GetTICGroupsOperationCompleted, userState);
        }
        
        private void OnGetTICGroupsOperationCompleted(object arg) {
            if ((this.GetTICGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTICGroupsCompleted(this, new GetTICGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/GetTICs", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetTICsRsp GetTICs(string apiLoginID, string apiKey) {
            object[] results = this.Invoke("GetTICs", new object[] {
                        apiLoginID,
                        apiKey});
            return ((GetTICsRsp)(results[0]));
        }
        
        /// <remarks/>
        public void GetTICsAsync(string apiLoginID, string apiKey) {
            this.GetTICsAsync(apiLoginID, apiKey, null);
        }
        
        /// <remarks/>
        public void GetTICsAsync(string apiLoginID, string apiKey, object userState) {
            if ((this.GetTICsOperationCompleted == null)) {
                this.GetTICsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTICsOperationCompleted);
            }
            this.InvokeAsync("GetTICs", new object[] {
                        apiLoginID,
                        apiKey}, this.GetTICsOperationCompleted, userState);
        }
        
        private void OnGetTICsOperationCompleted(object arg) {
            if ((this.GetTICsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTICsCompleted(this, new GetTICsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/GetTICsByGroup", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetTICsRsp GetTICsByGroup(string apiLoginID, string apiKey, int ticGroup) {
            object[] results = this.Invoke("GetTICsByGroup", new object[] {
                        apiLoginID,
                        apiKey,
                        ticGroup});
            return ((GetTICsRsp)(results[0]));
        }
        
        /// <remarks/>
        public void GetTICsByGroupAsync(string apiLoginID, string apiKey, int ticGroup) {
            this.GetTICsByGroupAsync(apiLoginID, apiKey, ticGroup, null);
        }
        
        /// <remarks/>
        public void GetTICsByGroupAsync(string apiLoginID, string apiKey, int ticGroup, object userState) {
            if ((this.GetTICsByGroupOperationCompleted == null)) {
                this.GetTICsByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTICsByGroupOperationCompleted);
            }
            this.InvokeAsync("GetTICsByGroup", new object[] {
                        apiLoginID,
                        apiKey,
                        ticGroup}, this.GetTICsByGroupOperationCompleted, userState);
        }
        
        private void OnGetTICsByGroupOperationCompleted(object arg) {
            if ((this.GetTICsByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTICsByGroupCompleted(this, new GetTICsByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/AddExemptCertificate", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddCertificateRsp AddExemptCertificate(string apiLoginID, string apiKey, string customerID, ExemptionCertificate exemptCert) {
            object[] results = this.Invoke("AddExemptCertificate", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        exemptCert});
            return ((AddCertificateRsp)(results[0]));
        }
        
        /// <remarks/>
        public void AddExemptCertificateAsync(string apiLoginID, string apiKey, string customerID, ExemptionCertificate exemptCert) {
            this.AddExemptCertificateAsync(apiLoginID, apiKey, customerID, exemptCert, null);
        }
        
        /// <remarks/>
        public void AddExemptCertificateAsync(string apiLoginID, string apiKey, string customerID, ExemptionCertificate exemptCert, object userState) {
            if ((this.AddExemptCertificateOperationCompleted == null)) {
                this.AddExemptCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddExemptCertificateOperationCompleted);
            }
            this.InvokeAsync("AddExemptCertificate", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID,
                        exemptCert}, this.AddExemptCertificateOperationCompleted, userState);
        }
        
        private void OnAddExemptCertificateOperationCompleted(object arg) {
            if ((this.AddExemptCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddExemptCertificateCompleted(this, new AddExemptCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/DeleteExemptCertificate", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeleteCertificateRsp DeleteExemptCertificate(string apiLoginID, string apiKey, string certificateID) {
            object[] results = this.Invoke("DeleteExemptCertificate", new object[] {
                        apiLoginID,
                        apiKey,
                        certificateID});
            return ((DeleteCertificateRsp)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExemptCertificateAsync(string apiLoginID, string apiKey, string certificateID) {
            this.DeleteExemptCertificateAsync(apiLoginID, apiKey, certificateID, null);
        }
        
        /// <remarks/>
        public void DeleteExemptCertificateAsync(string apiLoginID, string apiKey, string certificateID, object userState) {
            if ((this.DeleteExemptCertificateOperationCompleted == null)) {
                this.DeleteExemptCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExemptCertificateOperationCompleted);
            }
            this.InvokeAsync("DeleteExemptCertificate", new object[] {
                        apiLoginID,
                        apiKey,
                        certificateID}, this.DeleteExemptCertificateOperationCompleted, userState);
        }
        
        private void OnDeleteExemptCertificateOperationCompleted(object arg) {
            if ((this.DeleteExemptCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExemptCertificateCompleted(this, new DeleteExemptCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/GetExemptCertificates", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetCertificatesRsp GetExemptCertificates(string apiLoginID, string apiKey, string customerID) {
            object[] results = this.Invoke("GetExemptCertificates", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID});
            return ((GetCertificatesRsp)(results[0]));
        }
        
        /// <remarks/>
        public void GetExemptCertificatesAsync(string apiLoginID, string apiKey, string customerID) {
            this.GetExemptCertificatesAsync(apiLoginID, apiKey, customerID, null);
        }
        
        /// <remarks/>
        public void GetExemptCertificatesAsync(string apiLoginID, string apiKey, string customerID, object userState) {
            if ((this.GetExemptCertificatesOperationCompleted == null)) {
                this.GetExemptCertificatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExemptCertificatesOperationCompleted);
            }
            this.InvokeAsync("GetExemptCertificates", new object[] {
                        apiLoginID,
                        apiKey,
                        customerID}, this.GetExemptCertificatesOperationCompleted, userState);
        }
        
        private void OnGetExemptCertificatesOperationCompleted(object arg) {
            if ((this.GetExemptCertificatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExemptCertificatesCompleted(this, new GetExemptCertificatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxcloud.net/Ping", RequestNamespace="http://taxcloud.net", ResponseNamespace="http://taxcloud.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PingRsp Ping(string apiLoginID, string apiKey) {
            object[] results = this.Invoke("Ping", new object[] {
                        apiLoginID,
                        apiKey});
            return ((PingRsp)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync(string apiLoginID, string apiKey) {
            this.PingAsync(apiLoginID, apiKey, null);
        }
        
        /// <remarks/>
        public void PingAsync(string apiLoginID, string apiKey, object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[] {
                        apiLoginID,
                        apiKey}, this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class VerifiedAddress : Address {
        
        private string errNumberField;
        
        private string errDescriptionField;
        
        /// <remarks/>
        public string ErrNumber {
            get {
                return this.errNumberField;
            }
            set {
                this.errNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrDescription {
            get {
                return this.errDescriptionField;
            }
            set {
                this.errDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerifiedAddress))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class Address {
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zip5Field;
        
        private string zip4Field;
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip5 {
            get {
                return this.zip5Field;
            }
            set {
                this.zip5Field = value;
            }
        }
        
        /// <remarks/>
        public string Zip4 {
            get {
                return this.zip4Field;
            }
            set {
                this.zip4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class TIC {
        
        private int tICIDField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int TICID {
            get {
                return this.tICIDField;
            }
            set {
                this.tICIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class TICGroup {
        
        private int groupIDField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class CartItemResponse {
        
        private int cartItemIndexField;
        
        private float taxAmountField;
        
        /// <remarks/>
        public int CartItemIndex {
            get {
                return this.cartItemIndexField;
            }
            set {
                this.cartItemIndexField = value;
            }
        }
        
        /// <remarks/>
        public float TaxAmount {
            get {
                return this.taxAmountField;
            }
            set {
                this.taxAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class ResponseMessage {
        
        private MessageType responseTypeField;
        
        private string messageField;
        
        /// <remarks/>
        public MessageType ResponseType {
            get {
                return this.responseTypeField;
            }
            set {
                this.responseTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public enum MessageType {
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Informational,
        
        /// <remarks/>
        OK,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PingRsp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCertificatesRsp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeleteCertificateRsp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCertificateRsp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTICsRsp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTICGroupsRsp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReturnedRsp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CapturedRsp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthorizedRsp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LookupRsp))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class ResponseBase {
        
        private MessageType responseTypeField;
        
        private ResponseMessage[] messagesField;
        
        /// <remarks/>
        public MessageType ResponseType {
            get {
                return this.responseTypeField;
            }
            set {
                this.responseTypeField = value;
            }
        }
        
        /// <remarks/>
        public ResponseMessage[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class PingRsp : ResponseBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class GetCertificatesRsp : ResponseBase {
        
        private ExemptionCertificate[] exemptCertificatesField;
        
        /// <remarks/>
        public ExemptionCertificate[] ExemptCertificates {
            get {
                return this.exemptCertificatesField;
            }
            set {
                this.exemptCertificatesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class ExemptionCertificate {
        
        private string certificateIDField;
        
        private ExemptionCertificateDetail detailField;
        
        /// <remarks/>
        public string CertificateID {
            get {
                return this.certificateIDField;
            }
            set {
                this.certificateIDField = value;
            }
        }
        
        /// <remarks/>
        public ExemptionCertificateDetail Detail {
            get {
                return this.detailField;
            }
            set {
                this.detailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class ExemptionCertificateDetail {
        
        private ExemptState[] exemptStatesField;
        
        private bool singlePurchaseField;
        
        private string singlePurchaseOrderNumberField;
        
        private string purchaserFirstNameField;
        
        private string purchaserLastNameField;
        
        private string purchaserTitleField;
        
        private string purchaserAddress1Field;
        
        private string purchaserAddress2Field;
        
        private string purchaserCityField;
        
        private State purchaserStateField;
        
        private string purchaserZipField;
        
        private TaxID purchaserTaxIDField;
        
        private BusinessType purchaserBusinessTypeField;
        
        private string purchaserBusinessTypeOtherValueField;
        
        private ExemptionReason purchaserExemptionReasonField;
        
        private string purchaserExemptionReasonValueField;
        
        private System.DateTime createdDateField;
        
        /// <remarks/>
        public ExemptState[] ExemptStates {
            get {
                return this.exemptStatesField;
            }
            set {
                this.exemptStatesField = value;
            }
        }
        
        /// <remarks/>
        public bool SinglePurchase {
            get {
                return this.singlePurchaseField;
            }
            set {
                this.singlePurchaseField = value;
            }
        }
        
        /// <remarks/>
        public string SinglePurchaseOrderNumber {
            get {
                return this.singlePurchaseOrderNumberField;
            }
            set {
                this.singlePurchaseOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserFirstName {
            get {
                return this.purchaserFirstNameField;
            }
            set {
                this.purchaserFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserLastName {
            get {
                return this.purchaserLastNameField;
            }
            set {
                this.purchaserLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserTitle {
            get {
                return this.purchaserTitleField;
            }
            set {
                this.purchaserTitleField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserAddress1 {
            get {
                return this.purchaserAddress1Field;
            }
            set {
                this.purchaserAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserAddress2 {
            get {
                return this.purchaserAddress2Field;
            }
            set {
                this.purchaserAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserCity {
            get {
                return this.purchaserCityField;
            }
            set {
                this.purchaserCityField = value;
            }
        }
        
        /// <remarks/>
        public State PurchaserState {
            get {
                return this.purchaserStateField;
            }
            set {
                this.purchaserStateField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserZip {
            get {
                return this.purchaserZipField;
            }
            set {
                this.purchaserZipField = value;
            }
        }
        
        /// <remarks/>
        public TaxID PurchaserTaxID {
            get {
                return this.purchaserTaxIDField;
            }
            set {
                this.purchaserTaxIDField = value;
            }
        }
        
        /// <remarks/>
        public BusinessType PurchaserBusinessType {
            get {
                return this.purchaserBusinessTypeField;
            }
            set {
                this.purchaserBusinessTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserBusinessTypeOtherValue {
            get {
                return this.purchaserBusinessTypeOtherValueField;
            }
            set {
                this.purchaserBusinessTypeOtherValueField = value;
            }
        }
        
        /// <remarks/>
        public ExemptionReason PurchaserExemptionReason {
            get {
                return this.purchaserExemptionReasonField;
            }
            set {
                this.purchaserExemptionReasonField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserExemptionReasonValue {
            get {
                return this.purchaserExemptionReasonValueField;
            }
            set {
                this.purchaserExemptionReasonValueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class ExemptState {
        
        private State stateAbbrField;
        
        private string reasonForExemptionField;
        
        private string identificationNumberField;
        
        /// <remarks/>
        public State StateAbbr {
            get {
                return this.stateAbbrField;
            }
            set {
                this.stateAbbrField = value;
            }
        }
        
        /// <remarks/>
        public string ReasonForExemption {
            get {
                return this.reasonForExemptionField;
            }
            set {
                this.reasonForExemptionField = value;
            }
        }
        
        /// <remarks/>
        public string IdentificationNumber {
            get {
                return this.identificationNumberField;
            }
            set {
                this.identificationNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public enum State {
        
        /// <remarks/>
        AL,
        
        /// <remarks/>
        AK,
        
        /// <remarks/>
        AZ,
        
        /// <remarks/>
        AR,
        
        /// <remarks/>
        CA,
        
        /// <remarks/>
        CO,
        
        /// <remarks/>
        CT,
        
        /// <remarks/>
        DE,
        
        /// <remarks/>
        DC,
        
        /// <remarks/>
        FL,
        
        /// <remarks/>
        GA,
        
        /// <remarks/>
        HI,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        IL,
        
        /// <remarks/>
        IN,
        
        /// <remarks/>
        IA,
        
        /// <remarks/>
        KS,
        
        /// <remarks/>
        KY,
        
        /// <remarks/>
        LA,
        
        /// <remarks/>
        ME,
        
        /// <remarks/>
        MD,
        
        /// <remarks/>
        MA,
        
        /// <remarks/>
        MI,
        
        /// <remarks/>
        MN,
        
        /// <remarks/>
        MS,
        
        /// <remarks/>
        MO,
        
        /// <remarks/>
        MT,
        
        /// <remarks/>
        NE,
        
        /// <remarks/>
        NV,
        
        /// <remarks/>
        NH,
        
        /// <remarks/>
        NJ,
        
        /// <remarks/>
        NM,
        
        /// <remarks/>
        NY,
        
        /// <remarks/>
        NC,
        
        /// <remarks/>
        ND,
        
        /// <remarks/>
        OH,
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        OR,
        
        /// <remarks/>
        PA,
        
        /// <remarks/>
        RI,
        
        /// <remarks/>
        SC,
        
        /// <remarks/>
        SD,
        
        /// <remarks/>
        TN,
        
        /// <remarks/>
        TX,
        
        /// <remarks/>
        UT,
        
        /// <remarks/>
        VT,
        
        /// <remarks/>
        VA,
        
        /// <remarks/>
        WA,
        
        /// <remarks/>
        WV,
        
        /// <remarks/>
        WI,
        
        /// <remarks/>
        WY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class TaxID {
        
        private TaxIDType taxTypeField;
        
        private string iDNumberField;
        
        private string stateOfIssueField;
        
        /// <remarks/>
        public TaxIDType TaxType {
            get {
                return this.taxTypeField;
            }
            set {
                this.taxTypeField = value;
            }
        }
        
        /// <remarks/>
        public string IDNumber {
            get {
                return this.iDNumberField;
            }
            set {
                this.iDNumberField = value;
            }
        }
        
        /// <remarks/>
        public string StateOfIssue {
            get {
                return this.stateOfIssueField;
            }
            set {
                this.stateOfIssueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public enum TaxIDType {
        
        /// <remarks/>
        SSN,
        
        /// <remarks/>
        FEIN,
        
        /// <remarks/>
        StateIssued,
        
        /// <remarks/>
        ForeignDiplomat,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public enum BusinessType {
        
        /// <remarks/>
        AccommodationAndFoodServices,
        
        /// <remarks/>
        Agricultural_Forestry_Fishing_Hunting,
        
        /// <remarks/>
        Construction,
        
        /// <remarks/>
        FinanceAndInsurance,
        
        /// <remarks/>
        Information_PublishingAndCommunications,
        
        /// <remarks/>
        Manufacturing,
        
        /// <remarks/>
        Mining,
        
        /// <remarks/>
        RealEstate,
        
        /// <remarks/>
        RentalAndLeasing,
        
        /// <remarks/>
        RetailTrade,
        
        /// <remarks/>
        TransportationAndWarehousing,
        
        /// <remarks/>
        Utilities,
        
        /// <remarks/>
        WholesaleTrade,
        
        /// <remarks/>
        BusinessServices,
        
        /// <remarks/>
        ProfessionalServices,
        
        /// <remarks/>
        EducationAndHealthCareServices,
        
        /// <remarks/>
        NonprofitOrganization,
        
        /// <remarks/>
        Government,
        
        /// <remarks/>
        NotABusiness,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public enum ExemptionReason {
        
        /// <remarks/>
        FederalGovernmentDepartment,
        
        /// <remarks/>
        StateOrLocalGovernmentName,
        
        /// <remarks/>
        TribalGovernmentName,
        
        /// <remarks/>
        ForeignDiplomat,
        
        /// <remarks/>
        CharitableOrganization,
        
        /// <remarks/>
        ReligiousOrEducationalOrganization,
        
        /// <remarks/>
        Resale,
        
        /// <remarks/>
        AgriculturalProduction,
        
        /// <remarks/>
        IndustrialProductionOrManufacturing,
        
        /// <remarks/>
        DirectPayPermit,
        
        /// <remarks/>
        DirectMail,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class DeleteCertificateRsp : ResponseBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class AddCertificateRsp : ResponseBase {
        
        private string certificateIDField;
        
        /// <remarks/>
        public string CertificateID {
            get {
                return this.certificateIDField;
            }
            set {
                this.certificateIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class GetTICsRsp : ResponseBase {
        
        private TIC[] tICsField;
        
        /// <remarks/>
        public TIC[] TICs {
            get {
                return this.tICsField;
            }
            set {
                this.tICsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class GetTICGroupsRsp : ResponseBase {
        
        private TICGroup[] tICGroupsField;
        
        /// <remarks/>
        public TICGroup[] TICGroups {
            get {
                return this.tICGroupsField;
            }
            set {
                this.tICGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class ReturnedRsp : ResponseBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class CapturedRsp : ResponseBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class AuthorizedRsp : ResponseBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class LookupRsp : ResponseBase {
        
        private string cartIDField;
        
        private CartItemResponse[] cartItemsResponseField;
        
        /// <remarks/>
        public string CartID {
            get {
                return this.cartIDField;
            }
            set {
                this.cartIDField = value;
            }
        }
        
        /// <remarks/>
        public CartItemResponse[] CartItemsResponse {
            get {
                return this.cartItemsResponseField;
            }
            set {
                this.cartItemsResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxcloud.net")]
    public partial class CartItem {
        
        private int indexField;
        
        private string itemIDField;
        
        private System.Nullable<int> tICField;
        
        private double priceField;
        
        private float qtyField;
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public string ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TIC {
            get {
                return this.tICField;
            }
            set {
                this.tICField = value;
            }
        }
        
        /// <remarks/>
        public double Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public float Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAddressCompletedEventHandler(object sender, VerifyAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VerifiedAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VerifiedAddress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LookupForDateCompletedEventHandler(object sender, LookupForDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LookupForDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LookupForDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LookupRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LookupRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LookupCompletedEventHandler(object sender, LookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LookupRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LookupRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthorizedCompletedEventHandler(object sender, AuthorizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthorizedRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthorizedRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthorizedWithCaptureCompletedEventHandler(object sender, AuthorizedWithCaptureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorizedWithCaptureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorizedWithCaptureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthorizedRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthorizedRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CapturedCompletedEventHandler(object sender, CapturedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CapturedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CapturedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapturedRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapturedRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnedCompletedEventHandler(object sender, ReturnedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnedRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnedRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTICGroupsCompletedEventHandler(object sender, GetTICGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTICGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTICGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetTICGroupsRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTICGroupsRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTICsCompletedEventHandler(object sender, GetTICsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTICsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTICsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetTICsRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTICsRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTICsByGroupCompletedEventHandler(object sender, GetTICsByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTICsByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTICsByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetTICsRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTICsRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddExemptCertificateCompletedEventHandler(object sender, AddExemptCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddExemptCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddExemptCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddCertificateRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddCertificateRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteExemptCertificateCompletedEventHandler(object sender, DeleteExemptCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExemptCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExemptCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteCertificateRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteCertificateRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetExemptCertificatesCompletedEventHandler(object sender, GetExemptCertificatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExemptCertificatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExemptCertificatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetCertificatesRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetCertificatesRsp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PingRsp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PingRsp)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591